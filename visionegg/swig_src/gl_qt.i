%module gl_qt
%{
#include "gl_qt.h"

PyObject *PyErr_GL_QTError; /* Errors generated by OpenGL/QuickTime code */
%}

%init %{
  /* New exception for GL_QT code */
  PyErr_GL_QTError = PyErr_NewException( "VisionEgg.QuickTime.GL_QTError", NULL, NULL ); // New reference
  Py_INCREF(PyErr_GL_QTError);
%}

%exception {
  $action
  if (gl_qt_err_occurred()) {
    PyErr_SetString(PyErr_GL_QTError, gl_qt_err_message());
    return NULL;
  }
}

/* 

   We cannot use the Python Carbon.Qt module because it doesn't wrap
   some necessary C calls.  This wouldn't be a problem if there was a
   header file which gave us access to the C data structures, but that
   doesn't exist, either. :( 

   Now what was it that I was looking for?? :) Was it the UPP
   functions??  I just found a demo that doesn't use that by
   "Bryan" <blb@withay.com>.  Ahh, well, this works!

*/

void initialize_quicktime( void );

gl_qt_renderer* gl_qt_renderer_create( Movie theMovie, unsigned tex_shape, float tex_scale ); // tex_scale = 0.0 is auto
void gl_qt_renderer_delete( gl_qt_renderer *);
void gl_qt_renderer_update( gl_qt_renderer *);

Movie load_movie( const char * filename );

/* ----------------------------------------------------------
 * functions in QuickTime 
 *
 * ---------------------------------------------------------- */

%typemap(out) OSErr {
  if (result != noErr) {
    PyErr_SetString(PyErr_GL_QTError, "Unknown OSErr");
    goto fail;
  }
  $result = Py_None;
  Py_INCREF(Py_None);
}

%typemap(out) Boolean {
  $result = PyInt_FromLong((long)$1); // XXX should change to bool for Py 2.3
  Py_INCREF($result);
}

%typemap(in, numinputs=0) Rect* outRect (Rect temp) {
  $1 = &temp;
}

%typemap(argout) (Rect* outRect) {
  $result = Py_BuildValue("(hhhh)",
			  $1->left,
			  $1->bottom,
			  $1->right,
			  $1->top
			  );
  Py_INCREF($result);
}

OSErr LoadMovieIntoRam(	Movie        theMovie,
			TimeValue    time,
			TimeValue    duration,
			long         flags );
OSErr PrerollMovie( Movie        theMovie,
		    TimeValue    time,
		    Fixed        Rate );
TimeValue GetMovieDuration( Movie    theMovie ); 
TimeScale GetMovieTimeScale( Movie    theMovie );  
TimeBase GetMovieTimeBase( Movie    theMovie ); 
Fixed GetMovieRate( Movie    theMovie );
Boolean IsMovieDone( Movie    theMovie );

/* 

Below this line are functions which don't return OSErr but may set
QuickTime error.  Therefore, from here we check it.

*/

%exception {
  $action
  if (GetMoviesError() != noErr) {
    PyErr_SetString(PyErr_GL_QTError, "Unknown OSErr with GetMoviesError()");
    goto fail;
  }
}

void MoviesTask( Movie    theMovie,
		 long     maxMilliSecToUse );
void StartMovie( Movie    theMovie );
void StopMovie( Movie    theMovie );
void GetMovieActiveSegment( Movie        theMovie,
			    TimeValue    *startTime,
			    TimeValue    *duration );
void GoToBeginningOfMovie( Movie    theMovie );
void GoToEndOfMovie( Movie    theMovie );
void GetMovieBox( Movie    theMovie,
		  Rect     *outRect );

%exception;
